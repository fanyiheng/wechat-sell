<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="120 seconds">
    <property name="LOG_HOME" value="e://log" />
    <property name="APP_NAME" value="sell" />
    <!-- 时间戳定义，timeReference：使用日志产生日期为时间基准 -->
    <contextName>${APP_NAME}</contextName>
    <!-- Simple file output -->
    <appender name="FILE_INFO"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志输出文件 -->
        <file>${LOG_HOME}/log-info.log</file>
        <!-- 追加日志到原文件结尾 -->
        <append>true</append>
        <!-- encoder defaults to ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>
                [%date{HH:mm:ss.SSS}] [%thread] %logger{36} [%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>

        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
        <!--<level>INFO</level>-->
        <!--</filter>-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}-info-%d{yyyyMMdd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 64 MB -->
                <maxFileSize>16 MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
        </rollingPolicy>

        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <prudent>false</prudent>
    </appender>
    <appender name="FILE_ERROR"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志输出文件 -->
        <file>${LOG_HOME}/${APP_NAME}_error.log</file>
        <!-- 追加日志到原文件结尾 -->
        <append>true</append>
        <!-- encoder defaults to ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>
                [%date{HH:mm:ss.SSS}] [%thread] %logger{36} [%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        <level>ERROR</level>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}-error-%d{yyyyMMdd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 32 MB -->
                <maxFileSize>16 MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>15</maxHistory>
        </rollingPolicy>

        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <prudent>false</prudent>
    </appender>
    <appender name="FILE_PRIVATE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志输出文件 -->
        <file>${LOG_HOME}/private/${APP_NAME}-private.log</file>
        <!-- 追加日志到原文件结尾 -->
        <append>true</append>
        <!-- encoder defaults to ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>
                [%date{HH:mm:ss.SSS}] [%thread] %logger{36} [%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        <level>TRACE</level>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
            <fileNamePattern>${LOG_HOME}/private/${APP_NAME}-private-%d{yyyyMMdd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 32 MB -->
                <maxFileSize>32 MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
        </rollingPolicy>

        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <prudent>false</prudent>
    </appender>


    <!-- Console output -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder defaults to ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <layout>
            <pattern>
                [ %-5level] [%d{HH:mm:ss.SSS}] [%thread] %logger{36} [%line] - %msg%n
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </layout>
        <!-- Only log level WARN and above -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!-- 邮件监控异常 -->
    <!--    <appender name="EMAIL" class="ch.qos.logback.classic.net.SMTPAppender">
            <smtpHost>smtp.163.com</smtpHost>
            <username>cairs-2w010@163.com</username>
            <password>zxc1s2dsa46</password>
            <from>cairs-2010@163.com</from>
            <to>403411d876@qq.com</to>
            <subject>【web-ext-Error】: %logger</subject>
         <layout class="ch.qos.logback.classic.html.HTMLLayout"/>
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>ERROR</level>
            </filter>
        </appender>-->
    <!-- 指定一个包，name必填，additivity选填：控制是否继承父类appender，默认true -->
    <!-- level选填，如果木有指定从最近的父类继承，顶级为root的级别 -->
    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" additivity="false">
        <appender-ref ref="FILE_PRIVATE" />
    </logger>
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_PRIVATE" />
    </logger>
    <logger name="org.hibernate.SQL" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_PRIVATE" />
    </logger>
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_PRIVATE" />
    </logger>
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_PRIVATE" />
    </logger>

    <!--myibatis log configure-->
    <!--<logger name="com.apache.ibatis" level="TRACE"/>-->
    <!--<logger name="java.sql.Connection" level="DEBUG"/>-->
    <!--<logger name="java.sql.Statement" level="DEBUG"/>-->
    <!--<logger name="java.sql.PreparedStatement" level="DEBUG"/>-->

    <!-- Enable FILE and STDOUT appenders for all log messages. By default,
        only log at level INFO and above. -->
    <root level="INFO">
        <appender-ref ref="FILE_INFO" />
        <appender-ref ref="FILE_ERROR" />
        <appender-ref ref="STDOUT" />
    </root>

    <!-- For loggers in the these namespaces, log at all levels. -->
    <!-- <logger name="pedestal" level="ALL" /> <logger name="hammock-cafe"
        level="ALL" /> <logger name="user" level="ALL" /> -->
</configuration>
